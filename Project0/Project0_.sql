CREATE TABLE ACCOUNTUSERS (
    ACCOUNTUSERS_ID INTEGER PRIMARY KEY,
    ACCOUNTUSERS_USERNAME VARCHAR2(25),
    ACCOUNTUSERS_PASSWORD VARCHAR2(25),
    ACCOUNTUSERS_SUPERUSER NUMBER(1) DEFAULT 0
);
/

CREATE TABLE BANK_ACCOUNT (
    BANK_ACCOUNT_ID INTEGER PRIMARY KEY,
    BANK_ACCOUNT_BALANCE NUMBER(8,2) DEFAULT 0.00,
    TRANSACTIONS_ID INTEGER NOT NULL
);
/

CREATE TABLE TRANSACTIONS (
    TRANSACTIONS_ID INTEGER PRIMARY KEY,
    TRANSACTIONS_TIME DATE,
    TRANSACTIONS_TYPE VARCHAR2(20),
    TRANSACTIONS_MODIFIER NUMBER(8,2) DEFAULT 0.00
);
/

CREATE TABLE ACCOUNTUSERS_BANK_ACCOUNT (
    ACCOUNTUSERS_ID INTEGER,
    BANK_ACCOUNT_ID INTEGER,
    PRIMARY KEY (ACCOUNTUSERS_ID, BANK_ACCOUNT_ID)
);
/
--FOREIGN KEY CONSTRAINS (DDL)
ALTER TABLE ACCOUNTUSERS_BANK_ACCOUNT
ADD CONSTRAINT FK_AU_AU_BANK_ACCOUNT
FOREIGN KEY (ACCOUNTUSERS_ID) REFERENCES ACCOUNTUSERS(ACCOUNTUSERS_ID);
/

ALTER TABLE ACCOUNTUSERS_BANK_ACCOUNT
ADD CONSTRAINT FK_BANK_ACCOUNT_AU_BANK_ACCOUNT
FOREIGN KEY (BANK_ACCOUNT_ID) REFERENCES BANK_ACCOUNT(BANK_ACCOUNT_ID);
/

ALTER TABLE BANK_ACCOUNT
ADD CONSTRAINT FK_TRANSACTIONS_ID
FOREIGN KEY (TRANSACTIONS_ID) REFERENCES TRANSACTIONS(TRANSACTIONS_ID);
/

--CREATE SEQUENCES AND TRIGGERS TO PROVIDE PRIMARY KEY VALUES

CREATE SEQUENCE SQ_ACCOUNTUSERS_PK
START WITH 1 
INCREMENT BY 1;
/


CREATE SEQUENCE SQ_BANK_ACCOUNT_PK
START WITH 1 
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_TRANSACTIONS_PK
START WITH 1 
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNTUSERS
BEFORE INSERT ON ACCOUNTUSERS
FOR EACH ROW
BEGIN
    SELECT SQ_ACCOUNTUSERS_PK.NEXTVAL INTO :NEW.ACCOUNTUSERS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_BANK_ACCOUNT
BEFORE INSERT ON BANK_ACCOUNT
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ACCOUNT_PK.NEXTVAL INTO :NEW.BANK_ACCOUNT_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_TRANSACTIONS
BEFORE INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
    SELECT SQ_TRANSACTIONS_PK.NEXTVAL INTO :NEW.TRANSACTIONS_ID FROM DUAL;
END;
/